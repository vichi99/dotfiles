# zshrc config oh-my-zsh file for MacOS, Jan Vicha

# Keep 2000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=2000
SAVEHIST=2000
HISTFILE=~/.zsh_history
# turn off find duplicate via ctrl + r
setopt HIST_FIND_NO_DUPS
# turn off save duplicate to history
setopt HIST_IGNORE_ALL_DUPS

# cargo rust package manager
export PATH="/Users/janvicha/.cargo/bin:$PATH"

# WORDCHARS='*?_-.[]~/&;!#$%^(){}<>'
WORDCHARS='*?_-[]~&;!#$%^(){}<>'

# aliases
# docker clear all dangling images
alias docker-clear='docker rmi $(docker images -f "dangling=true" -q)'
alias docker-clear-containers='docker rm $(docker ps -a -f status=exited -f status=created -q)'

alias l='exa -lhg --git --changed --group-directories-first'
alias ll='exa -lhga --git --changed --group-directories-first'
alias tree='exa -lhgT --git -L 2 --changed --group-directories-first'
alias git-log='git log --pretty=format:"%h - %an, %ar : %s" --graph'
alias git-log-tags="git log --color --no-walk --tags --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias git-remove-merged-branches='git branch --merged | grep -v \* | xargs git branch -D'

alias crypto='/Users/janvicha/.pyenv/shims/python /Users/janvicha/Projects/personal/CryptoBoard/app/main.py'

# spruce rust file size utility
alias dud='spruce --sort size -d'

# vscode
alias vscode_hs='cp ~/Projects/personal/vscode/settings_home_station.json .vscode/settings.json'
alias vscode_l='cp ~/Projects/personal/vscode/settings_laptop.json .vscode/settings.json'
alias vscode_t='cp ~/Projects/personal/vscode/settings_train.json .vscode/settings.json'

# Pyenv settings
# https://github.com/pyenv/pyenv/issues/268
# unset PYENV_VERSION 
export PYENV_ROOT="$HOME/.pyenv" 
export PATH="$PYENV_ROOT/bin:$PATH" 
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
eval "$(pyenv init --path)" 
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

ssh-add --apple-load-keychain

# Docker separator https://github.com/docker/compose-switch/issues/24
export COMPOSE_COMPATIBILITY=tru

# poetry
# poetry config virtualenvs.in-project true
# poetry config virtualenvs.prefer-active-python true
